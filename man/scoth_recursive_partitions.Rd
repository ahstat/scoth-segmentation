% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scoth_selection_algorithm.R
\name{scoth_recursive_partitions}
\alias{scoth_recursive_partitions}
\title{Main selection function}
\usage{
scoth_recursive_partitions(
  threshold = 0.1,
  nb_levels = 4,
  changepoint_gain,
  cost_initial,
  x,
  cost_func
)
}
\arguments{
\item{threshold}{within [0,1]}

\item{nb_levels}{number of levels of granularity to be computed iteratively}

\item{changepoint_gain}{vector of length the number of possible change points, with the gain
w.r.t to the global cost of [s, e). The larger gain the more probable it is a change}

\item{cost_initial}{cost of the whole series, used for normalizing the gain to
a new partition}

\item{x}{univariate (vector) or multivariate (data.frame) series, on which change points need to be found}

\item{cost_func}{a cost function}
}
\value{
list with two elements. Each element has the length of the number of
levels. The two elements are `partitions` and `changepoint_gains`

For partitions, each element is a data frame, each row being an interval [s, e)
between two change points (or the border) with the associated cost

For change point gains, each element is a vector of length the number of possible change points,
with the gain w.r.t to the local cost of each partition [s, e), and where the remaining elements
corresponding to previous change points assigned at larger granularity are set to NA
}
\description{
Iterate the partitioning of the series at different level of granularity, based on
a changepoint gain (computed w.r.t. a certain cost).
}
